/* ============================================================================
 * ðŸ“¦ 89 Contentful content type interfaces generated by contentful-typegen ðŸ¤–
 * ðŸ›‘ DO NOT EDIT THIS FILE â€” it is auto-generated and overwritten on each build.
 * ========================================================================== */

/** System metadata common to all Contentful entities. */
export interface Sys {
  id: string;
  type: string;
  createdAt: string;
  updatedAt: string;
  locale?: string;
  contentType?: { sys: { id: string; linkType: "ContentType"; type: "Link" } };
}

/** File metadata for an Asset (size, image dimensions). */
export interface AssetFileDetails {
  size: number;
  image?: { width: number; height: number };
}

/** File object for an Asset (URL, type, etc.). */
export interface AssetFile {
  url: string;
  details: AssetFileDetails;
  fileName: string;
  contentType: string;
}

/** Asset fields (title, description, file). */
export interface AssetFields {
  title?: string;
  description?: string;
  file?: AssetFile;
}

/** A minimal representation of a Contentful Asset. */
export interface Asset {
  sys: Sys;
  fields: AssetFields;
  metadata?: unknown;
}

/** A minimal representation of a Contentful Entry. */
export interface Entry<TFields = any> {
  sys: Sys;
  fields: TFields;
  metadata?: unknown;
}

/** Minimal Rich Text Document root node. */
export interface Document {
  nodeType: "document";
  data: Record<string, unknown>;
  content: any[];
}

export interface IPageStateFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  state: IState;
  heroSection: ICommonHeroBanner;
  filtersOrder: ICommonFilters[];
  faqSection?: ISectionFaq[] | undefined;
  quickLinkSection: ISectionQuickLink;
  publishDate?: string | undefined;
  listItemTitle?: string | undefined;
  listItemDescription?: Document | undefined;
  listItemImages: ICommonImage;
  stickyBar?: ISectionStickyBar[] | undefined;
  terpenes?: ICommonStep[] | undefined;
  terpeneSectionHeading: string;
  terpeneSectionDescription?: Document | undefined;
  flexibleData: (ISectionProductCarousel | ICommonHeroBanner)[];
  seoMetadata: ISeoMetadata;
  noResultsCopyText: string;
  excludedTerpenes?: string[] | undefined;
}
export interface IPageState extends Entry<IPageStateFields> {
  sys: Entry<IPageStateFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageState";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IResourceArticleFields {
  internalName: string;
  title: string;
  slug: string;
  date?: string | undefined;
  image?: Asset | undefined;
  hero?: Entry<unknown> | undefined;
  sections?: ISectionBlog[] | undefined;
  cardImage?: ICommonImage | undefined;
  cardTitle: string;
  cardDescription?: Document | undefined;
  categories?: IResourceCategory[] | undefined;
  seoTitle?: string | undefined;
  seoDescription?: string | undefined;
  breadcrumbTitle?: string | undefined;
  seoImage?: Asset | undefined;
}
export interface IResourceArticle extends Entry<IResourceArticleFields> {
  sys: Entry<IResourceArticleFields>["sys"] & {
    contentType: {
      sys: {
        id: "resourceArticle";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IHomepageFields {
  content?: Entry<unknown> | undefined;
  hero?: IDemoSlide[] | undefined;
}
export interface IHomepage extends Entry<IHomepageFields> {
  sys: Entry<IHomepageFields>["sys"] & {
    contentType: {
      sys: {
        id: "homepage";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IDemoSlideFields {
  title: string;
  description?: string | undefined;
  image?: Asset | undefined;
}
export interface IDemoSlide extends Entry<IDemoSlideFields> {
  sys: Entry<IDemoSlideFields>["sys"] & {
    contentType: {
      sys: {
        id: "demoSlide";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IGlobalSchemaFields {
  internalName: string;
  type: "Organization" | "WebSite" | "WebPage";
  schema: Record<string, unknown>;
}
export interface IGlobalSchema extends Entry<IGlobalSchemaFields> {
  sys: Entry<IGlobalSchemaFields>["sys"] & {
    contentType: {
      sys: {
        id: "globalSchema";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Page for listing resource articles */
export interface IResourceListFields {
  internalName: string;
  title: string;
  slug: string;
  description?: string | undefined;
  listHeadline?: string | undefined;
  categories?: IResourceCategory[] | undefined;
  featuredArticle?: IResourceArticle | undefined;
  recsTitle?: string | undefined;
  recsDescription?: string | undefined;
  recsContent?: IResourceArticle[] | undefined;
  limit: number;
  seoTitle?: string | undefined;
  seoDescription?: string | undefined;
  breadcrumbTitle?: string | undefined;
  seoImage?: Asset | undefined;
}
export interface IResourceList extends Entry<IResourceListFields> {
  sys: Entry<IResourceListFields>["sys"] & {
    contentType: {
      sys: {
        id: "resourceList";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IComplianceFields {
  internalName: string;
  pageWarning?: Document | undefined;
  blockResourcesState?: boolean | undefined;
  blockResourcesDispensary?: string[] | undefined;
  blockRatingsState?: boolean | undefined;
  blockRatingsDispensary?: string[] | undefined;
}
export interface ICompliance extends Entry<IComplianceFields> {
  sys: Entry<IComplianceFields>["sys"] & {
    contentType: {
      sys: {
        id: "compliance";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageBlogResourceFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  publishDate?: string | undefined;
  category:
    | "Most Popular"
    | "Cannabis 101"
    | "News & Culture"
    | "Recipes"
    | "Shopping & Reviews"
    | "Health & Lifestyle"
    | "Resources";
  pageType:
    | "Blog"
    | "Medical card"
    | "Marijuana Laws"
    | "Legal page"
    | "Recipe";
  readTime?: number | undefined;
  heroSection: ICommonHeroBanner;
  showToC: boolean;
  blogSections: ISectionBlog[];
  preparationDifficulty?:
    | ("Easy" | "Beginner" | "Medium" | "Intermediate")[]
    | undefined;
  preparationTime?: string | undefined;
  preparationInstruction?: string | undefined;
  flexibleData?: (ISectionProductCarousel | ICommonHeroBanner)[] | undefined;
  showOnBlogListing: boolean;
  listItemTitle: string;
  listItemDescription?: Document | undefined;
  listItemImages: ICommonImage;
  relatedArticlesHeading?: string | undefined;
  relatedArticlesDescription?: string | undefined;
  relatedArticles?: IPageBlogResource[] | undefined;
  relatedArticlesCta?: ICommonCta | undefined;
  seoMetadata: ISeoMetadata;
}
export interface IPageBlogResource extends Entry<IPageBlogResourceFields> {
  sys: Entry<IPageBlogResourceFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageBlogResource";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageHomeFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  heroCarouselSection: ICommonHeroBanner[];
  ocpSection: ISectionOcp[];
  feelingSection: ISectionOcp[];
  brands?: ISectionOcp | undefined;
  flexibleData?: (ICommonHeroBanner | ISectionProductCarousel)[] | undefined;
  relatedArticlesHeading: string;
  relatedArticlesDescription?: string | undefined;
  relatedArticles?: IPageBlogResource[] | undefined;
  relatedArticlesCta: ICommonCta;
  seoMetadata: ISeoMetadata;
  heroCarousel?: ICarousel[] | undefined;
  shopByRow?: ILinkList[] | undefined;
  contentCards?: ILinkList[] | undefined;
}
export interface IPageHome extends Entry<IPageHomeFields> {
  sys: Entry<IPageHomeFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageHome";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** E.g. Flower Category or Sleepy Feeling */
export interface IFacetFields {
  internalName: string;
  title: string;
  logo?: Asset | undefined;
  image?: ICommonImage | undefined;
  algoliaId:
    | "Category"
    | "Custom Row"
    | "Sub Categories"
    | "Activities"
    | "Brands"
    | "Feelings"
    | "Lineage"
    | "Specials";
  algoliaValue: string;
}
export interface IFacet extends Entry<IFacetFields> {
  sys: Entry<IFacetFields>["sys"] & {
    contentType: {
      sys: {
        id: "facet";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Categories for Resource Articles */
export interface IResourceCategoryFields {
  title: string;
  identifier: string;
}
export interface IResourceCategory extends Entry<IResourceCategoryFields> {
  sys: Entry<IResourceCategoryFields>["sys"] & {
    contentType: {
      sys: {
        id: "resourceCategory";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** A CTA Image entry */
export interface ICtaImageFields {
  internalName: string;
  title: string;
  target: string;
  image: Asset;
}
export interface ICtaImage extends Entry<ICtaImageFields> {
  sys: Entry<ICtaImageFields>["sys"] & {
    contentType: {
      sys: {
        id: "ctaImage";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISectionProductCarouselFields {
  internalName: string;
  carouselVariant: "Left CTA" | "Top CTA" | "NO CTA";
  heading?: string | undefined;
  description?: string | undefined;
  cta?: ICommonCta | undefined;
  switchType: "Algolia" | "Recommendation API";
  productCount: number;
  facetType?: IFacet[] | undefined;
  contextForRecommendationApi?: ("User" | "Store" | "Product")[] | undefined;
}
export interface ISectionProductCarousel
  extends Entry<ISectionProductCarouselFields> {
  sys: Entry<ISectionProductCarouselFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionProductCarousel";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** A CTA Link entry */
export interface ICtaLinkFields {
  internalName: string;
  target: string;
  title: string;
}
export interface ICtaLink extends Entry<ICtaLinkFields> {
  sys: Entry<ICtaLinkFields>["sys"] & {
    contentType: {
      sys: {
        id: "ctaLink";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IFeatureFlagFields {
  flag: string;
  enabled: boolean;
}
export interface IFeatureFlag extends Entry<IFeatureFlagFields> {
  sys: Entry<IFeatureFlagFields>["sys"] & {
    contentType: {
      sys: {
        id: "featureFlag";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** a Link List entry */
export interface ILinkListFields {
  internalName: string;
  title?: string | undefined;
  type: "Category Row" | "Content Card" | "Shop by Row";
  content: (ICtaLink | ICtaCard | ICtaImage)[];
}
export interface ILinkList extends Entry<ILinkListFields> {
  sys: Entry<ILinkListFields>["sys"] & {
    contentType: {
      sys: {
        id: "linkList";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonFiltersFields {
  internalName: string;
  label?: string | undefined;
  name:
    | "Category - kind"
    | "Lineage - category"
    | "Brands - brand"
    | "THC Potency - percent_thc"
    | "THCa Potency - percent_thca"
    | "CBD Potency - percent_cbd"
    | "Available Weights - available_weights"
    | "Price - bucket_price"
    | "Activities - activities"
    | "Feelings - feelings"
    | "Specials - applicable_special_ids"
    | "Customer Rating - aggregate_rating";
  expand: boolean;
  quickFilter: boolean;
}
export interface ICommonFilters extends Entry<ICommonFiltersFields> {
  sys: Entry<ICommonFiltersFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonFilters";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICarouselFields {
  internalName: string;
  type: "Hero Carousel";
  content: IBanner[];
}
export interface ICarousel extends Entry<ICarouselFields> {
  sys: Entry<ICarouselFields>["sys"] & {
    contentType: {
      sys: {
        id: "carousel";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** A CTA Card entry */
export interface ICtaCardFields {
  internalName: string;
  cardTitle: string;
  title: string;
  target: string;
  image: Asset;
}
export interface ICtaCard extends Entry<ICtaCardFields> {
  sys: Entry<ICtaCardFields>["sys"] & {
    contentType: {
      sys: {
        id: "ctaCard";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Navigation component content type */
export interface INavigationFields {
  internalName: string;
  logo?: Asset | undefined;
  searchPlaceholder?: string | undefined;
  content: (ICtaLink | ISubnav)[];
}
export interface INavigation extends Entry<INavigationFields> {
  sys: Entry<INavigationFields>["sys"] & {
    contentType: {
      sys: {
        id: "navigation";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IValidationTestFields {
  type: "Link" | "Image" | "Card";
  content?: Entry<unknown>[] | undefined;
  image?: ICommonImage | undefined;
  title?: string | undefined;
}
export interface IValidationTest extends Entry<IValidationTestFields> {
  sys: Entry<IValidationTestFields>["sys"] & {
    contentType: {
      sys: {
        id: "validationTest";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Banner component for hero carousel display */
export interface IBannerFields {
  internalName: string;
  type: "Hero Carousel";
  bannerTheme: "Green" | "Purple" | "Black" | "Yellow";
  title?: string | undefined;
  copyText?: string | undefined;
  image?: Asset[] | undefined;
  callToAction?: ICtaLink | undefined;
}
export interface IBanner extends Entry<IBannerFields> {
  sys: Entry<IBannerFields>["sys"] & {
    contentType: {
      sys: {
        id: "banner";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageMenuFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  heroSection: ICommonHeroBanner;
  menuResultSetting?:
    | (ICommonHeroBanner | ISectionProductCarousel)[]
    | undefined;
  menu: IMenu;
  seoMetadata: ISeoMetadata;
  sponsoredRowEnabled?: "on"[] | undefined;
}
export interface IPageMenu extends Entry<IPageMenuFields> {
  sys: Entry<IPageMenuFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageMenu";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ITestTestFieldsFields {
  json?: Record<string, unknown> | undefined;
  richText?: Document | undefined;
  singleReference?: Entry<unknown> | undefined;
  multiReference?: Entry<unknown>[] | undefined;
  file?: Asset | undefined;
  manyFiles?: Asset | undefined;
}
export interface ITestTestFields extends Entry<ITestTestFieldsFields> {
  sys: Entry<ITestTestFieldsFields>["sys"] & {
    contentType: {
      sys: {
        id: "testTestFields";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISubnavFields {
  internalName: string;
  title: string;
  target: string;
  content?: (ICtaLink | ISubnav)[] | undefined;
  image?: Asset | undefined;
  seeAllCTA?: ICtaLink | undefined;
}
export interface ISubnav extends Entry<ISubnavFields> {
  sys: Entry<ISubnavFields>["sys"] & {
    contentType: {
      sys: {
        id: "subnav";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IDispensaryFields {
  title: string;
  descriptionDeprecated?: string | undefined;
  description?: Document | undefined;
  hoursInformation: ITimings[];
  hoursAdditionalInfoHeading?: string | undefined;
  hoursAdditionalInfoDescription?: string | undefined;
  hoursImage?: ICommonImage | undefined;
  contactNumber?: string | undefined;
  contactEmail?: string | undefined;
  socialMediaPresence: ISocialMediaPresence;
  mapCtaText?: string | undefined;
  unitNumber: string;
  streetNumber?: string | undefined;
  streetName?: string | undefined;
  additionalInformation?: string | undefined;
  zipCode: string;
  city: string;
  region?: string | undefined;
  country: "USA" | "Canada" | "India";
  mapUrl: string;
  latitude?: string | undefined;
  longitude?: string | undefined;
}
export interface IDispensary extends Entry<IDispensaryFields> {
  sys: Entry<IDispensaryFields>["sys"] & {
    contentType: {
      sys: {
        id: "dispensary";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IStickyBarFields {
  internalName: string;
  title: string;
  cta: ICtaLink;
}
export interface IStickyBar extends Entry<IStickyBarFields> {
  sys: Entry<IStickyBarFields>["sys"] & {
    contentType: {
      sys: {
        id: "stickyBar";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Model to show states to use Jane Stack Adapter */
export interface IJaneStackAdapterFields {
  internalName: string;
  states: (
    | "CA"
    | "CT"
    | "FL"
    | "IL"
    | "MD"
    | "MA"
    | "MN"
    | "NV"
    | "NJ"
    | "NY"
    | "OH"
    | "PA"
    | "RI"
    | "VA"
  )[];
}
export interface IJaneStackAdapter extends Entry<IJaneStackAdapterFields> {
  sys: Entry<IJaneStackAdapterFields>["sys"] & {
    contentType: {
      sys: {
        id: "janeStackAdapter";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** A task or to-do item that can be assigned and tracked */
export interface ITest_taskFields {
  title: string;
  description?: string | undefined;
  status: "pending" | "in_progress" | "completed" | "cancelled";
  priority: "low" | "medium" | "high" | "urgent";
  dueDate?: string | undefined;
  assignedTo?: Entry<unknown> | undefined;
  tags?: string[] | undefined;
  attachments?: Asset[] | undefined;
  parentTask?: Entry<unknown> | undefined;
  subtasks?: Entry<unknown>[] | undefined;
  completedAt?: string | undefined;
  notes?: string | undefined;
}
export interface ITest_task extends Entry<ITest_taskFields> {
  sys: Entry<ITest_taskFields>["sys"] & {
    contentType: {
      sys: {
        id: "test_task";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Geolocation bar component content type */
export interface IGeolocationFields {
  internalName: string;
  prefix?: string | undefined;
  link?: ICtaLink | undefined;
}
export interface IGeolocation extends Entry<IGeolocationFields> {
  sys: Entry<IGeolocationFields>["sys"] & {
    contentType: {
      sys: {
        id: "geolocation";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Header global component content type */
export interface IGlobalHeaderFields {
  internalName: string;
  content: (IStickyBar | INavigation | IGeolocation | ILinkList)[];
}
export interface IGlobalHeader extends Entry<IGlobalHeaderFields> {
  sys: Entry<IGlobalHeaderFields>["sys"] & {
    contentType: {
      sys: {
        id: "globalHeader";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** E.g. Flower Category or Sleepy Feeling */
export interface ITestFacetCtaSwapFields {
  internalName: string;
  title: string;
  logo?: Asset | undefined;
  image?: ICommonImage | undefined;
  algoliaId:
    | "Category"
    | "Custom Row"
    | "Sub Categories"
    | "Activities"
    | "Brands"
    | "Feelings"
    | "Lineage"
    | "Specials";
  algoliaValue: string;
}
export interface ITestFacetCtaSwap extends Entry<ITestFacetCtaSwapFields> {
  sys: Entry<ITestFacetCtaSwapFields>["sys"] & {
    contentType: {
      sys: {
        id: "testFacetCtaSwap";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** E.g. Flower Category or Sleepy Feeling */
export interface ITestFacetCtaFields {
  internalName: string;
  title: string;
  logo?: Asset | undefined;
  image?: ICommonImage | undefined;
  algoliaId:
    | "Category"
    | "Custom Row"
    | "Sub Categories"
    | "Activities"
    | "Brands"
    | "Feelings"
    | "Lineage"
    | "Specials";
  algoliaValue: string;
}
export interface ITestFacetCta extends Entry<ITestFacetCtaFields> {
  sys: Entry<ITestFacetCtaFields>["sys"] & {
    contentType: {
      sys: {
        id: "testFacetCta";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ITestHomepageFields {
  title: string;
  content?: (IComponentCardList | IComponentImageLinkList)[] | undefined;
  links?: ICtaLink[] | undefined;
  imageLinks?: ICtaImage[] | undefined;
  cards?: ICtaCard[] | undefined;
}
export interface ITestHomepage extends Entry<ITestHomepageFields> {
  sys: Entry<ITestHomepageFields>["sys"] & {
    contentType: {
      sys: {
        id: "testHomepage";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IComponentCardListFields {
  internalName: string;
  content: ICtaCard[];
}
export interface IComponentCardList extends Entry<IComponentCardListFields> {
  sys: Entry<IComponentCardListFields>["sys"] & {
    contentType: {
      sys: {
        id: "componentCardList";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IComponentImageLinkListFields {
  title: string;
  internalName: string;
  content: ICtaImage[];
}
export interface IComponentImageLinkList
  extends Entry<IComponentImageLinkListFields> {
  sys: Entry<IComponentImageLinkListFields>["sys"] & {
    contentType: {
      sys: {
        id: "componentImageLinkList";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Tracks applied migrations */
export interface I1AupFiwSB56LblRg4F4iEEFields {
  migrationId: string;
  appliedAt: string;
  description?: string | undefined;
  contentTypeId?: string | undefined;
}
export interface I1AupFiwSB56LblRg4F4iEE
  extends Entry<I1AupFiwSB56LblRg4F4iEEFields> {
  sys: Entry<I1AupFiwSB56LblRg4F4iEEFields>["sys"] & {
    contentType: {
      sys: {
        id: "1AupFiwSB56LblRg4F4iEE";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface I6b7RjsnyrTFMnPjL0KJa4IFields {
  title: string;
}
export interface I6b7RjsnyrTFMnPjL0KJa4I
  extends Entry<I6b7RjsnyrTFMnPjL0KJa4IFields> {
  sys: Entry<I6b7RjsnyrTFMnPjL0KJa4IFields>["sys"] & {
    contentType: {
      sys: {
        id: "6b7RjsnyrTFMnPjL0KJa4I";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IShopCtaFields {
  title?: string | undefined;
  target?: string | undefined;
}
export interface IShopCta extends Entry<IShopCtaFields> {
  sys: Entry<IShopCtaFields>["sys"] & {
    contentType: {
      sys: {
        id: "shopCta";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Model to track engineering configuration items per environment */
export interface IEngineeringConfigFields {
  migrationVersion?: string | undefined;
}
export interface IEngineeringConfig extends Entry<IEngineeringConfigFields> {
  sys: Entry<IEngineeringConfigFields>["sys"] & {
    contentType: {
      sys: {
        id: "engineeringConfig";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IHeaderLinkFields {
  title: string;
  target: string;
  subnav?: IHeaderLink[] | undefined;
}
export interface IHeaderLink extends Entry<IHeaderLinkFields> {
  sys: Entry<IHeaderLinkFields>["sys"] & {
    contentType: {
      sys: {
        id: "headerLink";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISectionOcpFields {
  internalName: string;
  title: string;
  description?: string | undefined;
  facets: IFacet[];
  leftSideImages?: Asset[] | undefined;
  rightSideImages?: Asset[] | undefined;
  mobileImages?: Asset[] | undefined;
  images?: ICommonImage[] | undefined;
}
export interface ISectionOcp extends Entry<ISectionOcpFields> {
  sys: Entry<ISectionOcpFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionOcp";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Dispensary page model for componse */
export interface IPageDispensaryFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  heroGallery?: ICommonImageGallery | undefined;
  heroImage?: Asset | undefined;
  mobileHeroImage?: Asset | undefined;
  homeDispensary?: ICommonImage | undefined;
  dispensaryInformation: IDispensary;
  quickLinkSection?: ISectionQuickLink | undefined;
  dispensaryDetailsHeading?: string | undefined;
  menus?: IMenu[] | undefined;
  state: IPageState;
  dispensaryTags?:
    | ("Popular" | "Coming Soon" | "Non Loyalty" | "Lounge")[]
    | undefined;
  popupCtas?: ICommonPopupCta[] | undefined;
  deliveryZones?: ICoreDeliveryZone[] | undefined;
  showChatBox?: boolean | undefined;
  heroDescription?: string | undefined;
  licenceNumberRecreationalMenu?: string | undefined;
  licenceNumberMedicalMenu?: string | undefined;
  licenseNumberLounge?: string | undefined;
  reviews?: ISectionCommonSection | undefined;
  flexibleData?: (ICommonHeroBanner | ISectionProductCarousel)[] | undefined;
  faqSection?: ISectionFaq[] | undefined;
  visitingSectionTitle: string;
  dispensaryTabs?: ISectionCommonSection[] | undefined;
  loyaltyName?:
    | "affinity-w-springfield"
    | "bluepoint-wellness-of-westport"
    | "chicago"
    | "cookies-on-the-strip"
    | "gti-ny-adu"
    | "Rise Naperville"
    | "rise-abingdon"
    | "rise-amherst"
    | "rise-baxter"
    | "rise-bethesda"
    | "rise-bloomfield-rec"
    | "rise-bonita-springs"
    | "rise-brandon"
    | "rise-branford"
    | "rise-bristol"
    | "rise-brooklyn-park"
    | "rise-canton"
    | "rise-carlisle"
    | "rise-carson-city"
    | "rise-carson-city-hwy-50"
    | "rise-chambersburg"
    | "rise-charleston"
    | "rise-chelsea"
    | "rise-christiansburg"
    | "rise-clearwater"
    | "rise-cleveland"
    | "rise-craig"
    | "rise-cranberry"
    | "rise-crystal-river"
    | "rise-danville"
    | "rise-deerfield-beach"
    | "rise-dracut"
    | "rise-duncansville"
    | "rise-dunnellon"
    | "rise-eagan"
    | "rise-east-syracuse"
    | "rise-effingham"
    | "rise-erie-lake"
    | "rise-erie-peach"
    | "rise-fruitland-park"
    | "rise-grove-city"
    | "rise-hagerstown"
    | "rise-halfmoon"
    | "rise-hallandale-beach"
    | "rise-henderson"
    | "rise-henderson-boulder"
    | "rise-henrietta"
    | "rise-hermitage"
    | "rise-jacksonville"
    | "rise-joliet-colorado"
    | "rise-joliet-rock-creek"
    | "rise-joppa"
    | "rise-kendall"
    | "rise-king-of-prussia"
    | "rise-lake-in-the-hills"
    | "rise-lakewood-detroit"
    | "rise-lakewood-madison"
    | "rise-las-vegas-durango"
    | "rise-las-vegas-nellis"
    | "rise-las-vegas-rainbow"
    | "rise-las-vegas-tropicana"
    | "rise-latrobe"
    | "rise-leesburg"
    | "rise-long-beach"
    | "rise-lorain"
    | "rise-lynchburg"
    | "rise-manhattan"
    | "rise-mankato"
    | "rise-maynard"
    | "rise-meadville"
    | "rise-mechanicsburg"
    | "rise-monroeville"
    | "rise-mundelein"
    | "rise-naperville"
    | "rise-new-castle"
    | "rise-new-hope"
    | "rise-new-port-richey"
    | "rise-niles"
    | "rise-orange"
    | "rise-orlandogoodhomes"
    | "rise-oviedo"
    | "rise-paramus-med"
    | "rise-pasadena"
    | "rise-paterson-rec"
    | "rise-philadelphia"
    | "rise-pinellas-park"
    | "rise-port-orange"
    | "rise-quincy"
    | "rise-reno"
    | "rise-saint-paul"
    | "rise-salem"
    | "rise-silver-spring"
    | "rise-spanish-springs"
    | "rise-st-cloud"
    | "rise-st-petersburg"
    | "rise-steelton"
    | "rise-sun-city"
    | "rise-tallahassee-mahan"
    | "rise-tallahassee-tennessee"
    | "rise-tampa"
    | "rise-toledo"
    | "rise-warminster"
    | "rise-warwick"
    | "rise-wesley-chapel"
    | "rise-west-palm-beach"
    | "rise-whitehall"
    | "rise-willmar"
    | "rise-york"
    | undefined;
  dutchieStoreId?: number | undefined;
  customDispensaryTitle?: string | undefined;
  geolocationTitle?: string | undefined;
  seoMetadata: ISeoMetadata;
}
export interface IPageDispensary extends Entry<IPageDispensaryFields> {
  sys: Entry<IPageDispensaryFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageDispensary";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** It can reused by different pages such as home, state, faq */
export interface IFaqFields {
  question: string;
  answer?: Document | undefined;
}
export interface IFaq extends Entry<IFaqFields> {
  sys: Entry<IFaqFields>["sys"] & {
    contentType: {
      sys: {
        id: "faq";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IMenuFields {
  internalName: string;
  title: string;
  description?: string | undefined;
  menuType?: "delivery" | "medical" | "recreational" | undefined;
  menuFulfillmentType?: "Pickup" | "Delivery" | undefined;
  menuSource: "iheartjane" | "dutchie" | "gti" | "external";
  menuSourceId?: string | undefined;
  menuSourceUrl?: string | undefined;
  isDefault?: "yes" | "no" | undefined;
}
export interface IMenu extends Entry<IMenuFields> {
  sys: Entry<IMenuFields>["sys"] & {
    contentType: {
      sys: {
        id: "menu";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** This is a global component. If there is a draft entry of this model, the preview will show the draft and not be published. */
export interface ISectionFooterFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  logo: Asset;
  backgroundImage: ICommonImage;
  navigationMenuAbout: ICommonNavigation[];
  navigationMenuLegal: ICommonNavigation[];
  socialMediaPresence: ISocialMediaPresence;
  chatCta: ICommonCta;
  copyrightText: string;
  gtiLogo?: ICommonImage | undefined;
}
export interface ISectionFooter extends Entry<ISectionFooterFields> {
  sys: Entry<ISectionFooterFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionFooter";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonNavigationFields {
  internalName: string;
  navigationLabel: string;
  navigationUrl: string;
  navigationBanner?: Asset | undefined;
  childNavigation?: ICommonNavigation[] | undefined;
}
export interface ICommonNavigation extends Entry<ICommonNavigationFields> {
  sys: Entry<ICommonNavigationFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonNavigation";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Welcome, Rise rewards, Explore, Dispensary Near Me, View all Dispensaries, About us */
export interface ICommonHeroBannerFields {
  internalName: string;
  bannerType:
    | "Banner C08 Product Image"
    | "Banner C09 A General"
    | "Banner C09 A Text Button"
    | "Banner C09 B Extended Image"
    | "Banner C09 Left Image"
    | "Banner C09 Right Image"
    | "Banner C10 Statement"
    | "Banner C11 A Deal"
    | "Banner C11 B Special Offer"
    | "Banner C11 C Rewards"
    | "Banner C11 D Textarea"
    | "Banner C11 E Video"
    | "Banner C12 Help"
    | "Other";
  bannerTypeHint?: string | undefined;
  title: string;
  subTitle?: string | undefined;
  description?: Document | undefined;
  image?: Asset | undefined;
  mobileImage?: Asset | undefined;
  additionalImage?: ICommonImage | undefined;
  overlayImage?: ICommonImage | undefined;
  cta?: ICommonCta[] | undefined;
  videoEmbed?: Document | undefined;
  theme?: "White" | "Grey" | "Green" | "Dark" | "Light" | undefined;
}
export interface ICommonHeroBanner extends Entry<ICommonHeroBannerFields> {
  sys: Entry<ICommonHeroBannerFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonHeroBanner";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISectionStickyBarFields {
  internalName: string;
  title: string;
  description?: string | undefined;
  image?: Asset | undefined;
  cta: ICommonCta;
}
export interface ISectionStickyBar extends Entry<ISectionStickyBarFields> {
  sys: Entry<ISectionStickyBarFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionStickyBar";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonStepFields {
  internalName: string;
  heading?: string | undefined;
  description?: Document | undefined;
  image?: ICommonImage | undefined;
  tooltip?: ICommonHeroBanner | undefined;
  terpeneComponentName?:
    | "Alpha-bisabolol"
    | "AlphaPinene"
    | "Beta-pinene"
    | "Bisabolol"
    | "Borneol"
    | "Camphene"
    | "Caryophyllene"
    | "Delta 3 Carene"
    | "Eucalyptol"
    | "Geraniol"
    | "Guaiol"
    | "Humulene"
    | "Limonene"
    | "Linalool"
    | "Myrcene"
    | "Pinene"
    | "Terpineol"
    | "Trans-nerolido"
    | "Valencene"
    | "THCA"
    | "BetaMyrcene"
    | "CBGA"
    | "CaryophylleneOxide"
    | undefined;
}
export interface ICommonStep extends Entry<ICommonStepFields> {
  sys: Entry<ICommonStepFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonStep";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageStateDealsFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  state: IState;
  heroSections: ICommonHeroBanner[];
  dealsHeading: string;
  deals: ICoreDeal[];
  primaryDeals?: ICommonHeroBanner[] | undefined;
  eventHeading?: string | undefined;
  eventDiscounts?: ICommonHeroBanner[] | undefined;
  discountHeading?: string | undefined;
  discounts?: ICoreDeal[] | undefined;
  contentFeeds?: ICommonHeroBanner[] | undefined;
  flexibleData?: ISectionProductCarousel[] | undefined;
  seoMetadata: ISeoMetadata;
}
export interface IPageStateDeals extends Entry<IPageStateDealsFields> {
  sys: Entry<IPageStateDealsFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageStateDeals";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPopupRiseRewardsFields {
  internalName: string;
  heroBanner?: ICommonImage | undefined;
  emailConsent?: Document | undefined;
  heading: string;
  description?: Document | undefined;
  leadingText?: Document | undefined;
  legalLanguage1: Document;
  legalLanguage2?: Document | undefined;
  successMessage?: ICommonHeroBanner | undefined;
  submitCta: string;
  signupCta?: Document | undefined;
  confirmantionPopup?: ICommonPopupCta | undefined;
  loyaltyPlatform: "SpringBig" | "AnnexCloud";
  loyaltyAccountId: string;
  nameInCaps?: boolean | undefined;
  emailInstructions?: Document | undefined;
}
export interface IPopupRiseRewards extends Entry<IPopupRiseRewardsFields> {
  sys: Entry<IPopupRiseRewardsFields>["sys"] & {
    contentType: {
      sys: {
        id: "popupRiseRewards";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISectionFaqFields {
  internalName?: string | undefined;
  title: string;
  subTitle?: string | undefined;
  faqType: "Simple" | "Illustrator";
  image?: Asset | undefined;
  faqImage?: ICommonImage | undefined;
  group?: ICoreFaq | undefined;
  faqs: IFaq[];
}
export interface ISectionFaq extends Entry<ISectionFaqFields> {
  sys: Entry<ISectionFaqFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionFaq";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageRewardsFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  heroSection: ICommonHeroBanner;
  memberBenefitsSection: ISectionCommonSection;
  pointsTable?: ICommonHeroBanner[] | undefined;
  hiwHeading: string;
  hiwDescription?: string | undefined;
  hiwSteps: ICommonStep[];
  faqSection: ISectionFaq[];
  flexibleData?: (ICommonHeroBanner | ISectionProductCarousel)[] | undefined;
  seoMetadata: ISeoMetadata;
  stickyBar?: ISectionStickyBar | undefined;
}
export interface IPageRewards extends Entry<IPageRewardsFields> {
  sys: Entry<IPageRewardsFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageRewards";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** This is a global component. If there is a draft entry of this model, the preview will show the draft and not be published. */
export interface ISectionHeaderFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  logo?: Asset | undefined;
  onExpandLogo?: Asset | undefined;
  onScrollLogo?: Asset | undefined;
  navigationMenu: ICommonNavigation[];
}
export interface ISectionHeader extends Entry<ISectionHeaderFields> {
  sys: Entry<ISectionHeaderFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionHeader";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Amenity or Item for visit */
export interface IAmenityFields {
  title: string;
  description?: string | undefined;
  logo?: Asset | undefined;
}
export interface IAmenity extends Entry<IAmenityFields> {
  sys: Entry<IAmenityFields>["sys"] & {
    contentType: {
      sys: {
        id: "amenity";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** heading and p for CSS customization */
export interface ICommonHtmlTagFields {
  internalName?: string | undefined;
  content?: Document | undefined;
  videoCaption?: Document | undefined;
  tag: "H3" | "Strong" | "P" | "iframe";
  cssId?: string | undefined;
  cssClassName?: string | undefined;
}
export interface ICommonHtmlTag extends Entry<ICommonHtmlTagFields> {
  sys: Entry<ICommonHtmlTagFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonHtmlTag";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonImageFields {
  internalName?: string | undefined;
  alignment: "Left" | "Right" | "Center" | "Full";
  desktopImage: Asset;
  mobileImage?: Asset | undefined;
  thumbnailImage?: Asset | undefined;
}
export interface ICommonImage extends Entry<ICommonImageFields> {
  sys: Entry<ICommonImageFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonImage";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Config */
export interface ILoyaltySettingFields {
  internalName: string;
  loyalty_market: "SpringBig" | "AnnexCloud";
  use_new_ms?: boolean | undefined;
}
export interface ILoyaltySetting extends Entry<ILoyaltySettingFields> {
  sys: Entry<ILoyaltySettingFields>["sys"] & {
    contentType: {
      sys: {
        id: "loyaltySetting";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Created by Kameleoon App */
export interface IKameleoonVariationContainerFields {
  entryName?: string | undefined;
  experimentName?: string | undefined;
  experimentId: string;
  featureKey?: string | undefined;
  siteCode?: string | undefined;
  meta?: Record<string, unknown> | undefined;
  variations?: Entry<unknown>[] | undefined;
}
export interface IKameleoonVariationContainer
  extends Entry<IKameleoonVariationContainerFields> {
  sys: Entry<IKameleoonVariationContainerFields>["sys"] & {
    contentType: {
      sys: {
        id: "kameleoonVariationContainer";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISectionQuickLinkFields {
  internalName: string;
  title?: string | undefined;
  description?: string | undefined;
  links: (ICommonCta | ICommonPopupCta)[];
}
export interface ISectionQuickLink extends Entry<ISectionQuickLinkFields> {
  sys: Entry<ISectionQuickLinkFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionQuickLink";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** This is the common section and it will replace with these sections.
Section: Member Benefit, Section: Review, Section: Source, Section: Visiting Dispensary  */
export interface ISectionCommonSectionFields {
  internalName: string;
  title: string;
  subTitle?: string | undefined;
  tabTitle?: string | undefined;
  description?: Document | undefined;
  image?: ICommonImage | undefined;
  cta?: (ICommonPopupCta | ICommonCta)[] | undefined;
  listItems?:
    | (
        | ICommonMemberBenefit
        | ICommonReview
        | ICommonSource
        | IAmenity
        | ICoreDeal
      )[]
    | undefined;
  deliveryTime?: ITimings[] | undefined;
}
export interface ISectionCommonSection
  extends Entry<ISectionCommonSectionFields> {
  sys: Entry<ISectionCommonSectionFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionCommonSection";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** Blog Listing, Recipe Listing, Get A Medical Card Listing, Dispensary Guides Listing, State Laws Listing page */
export interface IPageListingPageFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  publishDate: string;
  heroSection: ICommonHeroBanner;
  heroBanner?: (ICommonHeroBanner | IPageBlogResource)[] | undefined;
  bodyHeading: string;
  listingItems?: (IPageBlogResource | IPageState)[] | undefined;
  recommendedResourcesHeading?: string | undefined;
  recommendedResourcesDescription?: Document | undefined;
  recommendedResources?: (IPageBlogResource | IPageListingPage)[] | undefined;
  listItemTitle: string;
  listItemDescription?: Document | undefined;
  listItemImages: ICommonImage;
  seoMetadata: ISeoMetadata;
}
export interface IPageListingPage extends Entry<IPageListingPageFields> {
  sys: Entry<IPageListingPageFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageListingPage";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICoreDealFields {
  internalName: string;
  title: string;
  specialText?: string | undefined;
  description: Document;
  image: Asset;
  mobileImage?: Asset | undefined;
  type: "Deal" | "Discount";
  fromDate?: string | undefined;
  toDate?: string | undefined;
  cta: ICommonCta;
}
export interface ICoreDeal extends Entry<ICoreDealFields> {
  sys: Entry<ICoreDealFields>["sys"] & {
    contentType: {
      sys: {
        id: "coreDeal";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** E.g. Terms and Conditions, Privacy policy and Notice of Privacy Practice */
export interface IPageStaticFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  heroSection: ICommonHeroBanner;
  body?: Document | undefined;
  flexibleData?: (ICommonHeroBanner | ISectionProductCarousel)[] | undefined;
  faqSection?: ISectionFaq[] | undefined;
  seoMetadata: ISeoMetadata;
}
export interface IPageStatic extends Entry<IPageStaticFields> {
  sys: Entry<IPageStaticFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageStatic";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** This is a global component. If this model has a draft entry, the preview will show the draft and not be published. */
export interface IPopupAgeGateFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  ageLimit: string;
  ageGateBanner: ICommonHeroBanner;
  ageVerificationQuestion: string;
  ageVerificationAdditionalQuestion?: string | undefined;
  underAgeAcknowledgement: ICommonHeroBanner;
  under21Acknowledgement?: ICommonHeroBanner | undefined;
  enableDobForm: boolean;
  ageGatePrivacyText?: Document | undefined;
  backLinkText?: Document | undefined;
}
export interface IPopupAgeGate extends Entry<IPopupAgeGateFields> {
  sys: Entry<IPopupAgeGateFields>["sys"] & {
    contentType: {
      sys: {
        id: "popupAgeGate";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonCtaFields {
  internalName: string;
  title: string;
  url?: string | undefined;
  longUrl: string;
  image?: Asset | undefined;
  openInNewTab?: boolean | undefined;
}
export interface ICommonCta extends Entry<ICommonCtaFields> {
  sys: Entry<ICommonCtaFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonCta";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageAboutUsFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  heroSection: ICommonHeroBanner;
  flexibleData?: ICommonHeroBanner[] | undefined;
  leftSideImage: ICommonImage;
  rightSideImage: ICommonImage;
  overlayImage: ICommonImage;
  cannabisQuotes: ISectionCannabisQuotes[];
  brandsSectionHeading?: string | undefined;
  brandsSectionDescription: Document;
  brands: IFacet[];
  donationHeading: string;
  donationParagraph?: Document | undefined;
  donatedToNonProfit: string;
  donatedToNonProfitDesc?: Document | undefined;
  donatedThroughGreenThumb: string;
  donatedThroughGreenThumbDesc?: Document | undefined;
  letsRiseHeading: string;
  letsRiseCta?: ICommonCta | undefined;
  letsRiseDesktopImage?: Asset[] | undefined;
  letsRiseMobileImage?: Asset[] | undefined;
  seoMetadata: ISeoMetadata;
}
export interface IPageAboutUs extends Entry<IPageAboutUsFields> {
  sys: Entry<IPageAboutUsFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageAboutUs";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISectionSupportChatFields {
  internalName: string;
  title: string;
  logo: Asset;
  enableChat: boolean;
  chatCtaLabel: string;
  closeConfirmation: string;
  agentUnavailabilityMessage?: Document | undefined;
  chatFormError?: Document | undefined;
  chatFormSuccess?: Document | undefined;
  chatFormApiError?: Document | undefined;
}
export interface ISectionSupportChat extends Entry<ISectionSupportChatFields> {
  sys: Entry<ISectionSupportChatFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionSupportChat";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageAccountFields {
  internalName: string;
  name: string;
  domain: ("Main" | "Ohio")[];
  slug: string;
  body?: ICommonHeroBanner[] | undefined;
  errorMessage?: ICommonHeroBanner[] | undefined;
  warningMessage?: ICommonHeroBanner[] | undefined;
  seoMetadata?: ISeoMetadata | undefined;
  faqSection?: ISectionFaq[] | undefined;
  flexibleData?: ISectionProductCarousel[] | undefined;
}
export interface IPageAccount extends Entry<IPageAccountFields> {
  sys: Entry<IPageAccountFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageAccount";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISectionBlogFields {
  internalName: string;
  useInToC: boolean;
  title?: string | undefined;
  body: Document;
}
export interface ISectionBlog extends Entry<ISectionBlogFields> {
  sys: Entry<ISectionBlogFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionBlog";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPagePatientRegistrationFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  heroSection: ICommonHeroBanner;
  sidebarHeroBanner: ICommonHeroBanner;
  successMessage: ICommonHeroBanner;
  seoMetadata: ISeoMetadata;
  privacyPracticesNotice?: Document | undefined;
  codeOfConductAgreement?: Document | undefined;
  vaFormTitle?: string | undefined;
  vaFormDescription?: string | undefined;
  pdfCta?: ICommonCta | undefined;
}
export interface IPagePatientRegistration
  extends Entry<IPagePatientRegistrationFields> {
  sys: Entry<IPagePatientRegistrationFields>["sys"] & {
    contentType: {
      sys: {
        id: "pagePatientRegistration";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageContactUsFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  breadcrumbTitle: string;
  slug: string;
  heroSection: ICommonHeroBanner;
  chatInfoBox: ICommonHeroBanner;
  seoMetadata: ISeoMetadata;
  helpTitle: string;
  helpDescription?: string | undefined;
  helpCta: string;
  step1Heading?: string | undefined;
  radioOptions: ICoreFaq[];
  step2Heading?: string | undefined;
  step3Heading?: string | undefined;
  successMessage?: ICommonHeroBanner | undefined;
  ccHeading: string;
  ccDescription?: string | undefined;
  ccLogo: ICommonImage;
  ccOptions: ICommonSource[];
}
export interface IPageContactUs extends Entry<IPageContactUsFields> {
  sys: Entry<IPageContactUsFields>["sys"] & {
    contentType: {
      sys: {
        id: "pageContactUs";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ITimingsFields {
  internalName: string;
  day: (
    | "Monday"
    | "Tuesday"
    | "Wednesday"
    | "Thursday"
    | "Friday"
    | "Saturday"
    | "Sunday"
  )[];
  from: string;
  to: string;
  fromMedical?: string | undefined;
  toMedical?: string | undefined;
  customLabel?: string | undefined;
}
export interface ITimings extends Entry<ITimingsFields> {
  sys: Entry<ITimingsFields>["sys"] & {
    contentType: {
      sys: {
        id: "timings";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** E.g Talk to Pharmacist */
export interface ICommonPopupCtaFields {
  internalName: string;
  buttonText?: string | undefined;
  buttonImage?: Asset | undefined;
  popupType:
    | "Reservation"
    | "Event List"
    | "Smokey"
    | "Join Mailing List"
    | "Scheduling"
    | "Popup Centered";
  popupHeading: string;
  popupDescription?: Document | undefined;
  popupImage?: Asset | undefined;
  popupIFrameUrl?: string | undefined;
  popupCtas?: ICommonCta[] | undefined;
}
export interface ICommonPopupCta extends Entry<ICommonPopupCtaFields> {
  sys: Entry<ICommonPopupCtaFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonPopupCta";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICoreFaqFields {
  title: string;
  icon: Asset;
}
export interface ICoreFaq extends Entry<ICoreFaqFields> {
  sys: Entry<ICoreFaqFields>["sys"] & {
    contentType: {
      sys: {
        id: "coreFaq";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonImageGalleryFields {
  internalName: string;
  images?: ICommonImage[] | undefined;
}
export interface ICommonImageGallery extends Entry<ICommonImageGalleryFields> {
  sys: Entry<ICommonImageGalleryFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonImageGallery";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonSourceFields {
  internalName: string;
  title: string;
  description?: string | undefined;
  url: string;
  icon?: Asset | undefined;
}
export interface ICommonSource extends Entry<ICommonSourceFields> {
  sys: Entry<ICommonSourceFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonSource";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonReviewFields {
  internalNam?: string | undefined;
  rating: number;
  comment: string;
  author?: string | undefined;
}
export interface ICommonReview extends Entry<ICommonReviewFields> {
  sys: Entry<ICommonReviewFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonReview";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICoreGeoJsonFields {
  internalName: string;
  geoJson: Record<string, unknown>;
}
export interface ICoreGeoJson extends Entry<ICoreGeoJsonFields> {
  sys: Entry<ICoreGeoJsonFields>["sys"] & {
    contentType: {
      sys: {
        id: "coreGeoJson";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISectionCannabisQuotesFields {
  internalName: string;
  quotes?: string[] | undefined;
}
export interface ISectionCannabisQuotes
  extends Entry<ISectionCannabisQuotesFields> {
  sys: Entry<ISectionCannabisQuotesFields>["sys"] & {
    contentType: {
      sys: {
        id: "sectionCannabisQuotes";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonTwoColumnContentFields {
  internalName: string;
  columnOneContent: ICommonCta | ICommonHtmlTag;
  columnOneWidth: number;
  columnTwoContent: ICommonHtmlTag | ICommonCta;
}
export interface ICommonTwoColumnContent
  extends Entry<ICommonTwoColumnContentFields> {
  sys: Entry<ICommonTwoColumnContentFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonTwoColumnContent";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICoreDeliveryZoneFields {
  internalName: string;
  defaultMenu?: IMenu | undefined;
  geoJsons?: ICoreGeoJson[] | undefined;
}
export interface ICoreDeliveryZone extends Entry<ICoreDeliveryZoneFields> {
  sys: Entry<ICoreDeliveryZoneFields>["sys"] & {
    contentType: {
      sys: {
        id: "coreDeliveryZone";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** This is a global component. If this model has a draft entry, the preview will show the draft and not be published. */
export interface ICookieGateFields {
  internalName: string;
  domain: ("Main" | "Ohio")[];
  cookieHeading?: string | undefined;
  cookieBody?: Document | undefined;
}
export interface ICookieGate extends Entry<ICookieGateFields> {
  sys: Entry<ICookieGateFields>["sys"] & {
    contentType: {
      sys: {
        id: "cookieGate";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICoreRecipeFields {
  recipeName: string;
  introImage?: Asset | undefined;
  introduction?: Document | undefined;
  preparationTime?: string | undefined;
  preparationDifficulty?:
    | ("Easy" | "Beginner" | "Medium" | "Intermediate")[]
    | undefined;
  preparationInstruction?: string | undefined;
  ingredients: Document;
  method: Document;
  gallery?: Asset[] | undefined;
}
export interface ICoreRecipe extends Entry<ICoreRecipeFields> {
  sys: Entry<ICoreRecipeFields>["sys"] & {
    contentType: {
      sys: {
        id: "coreRecipe";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICommonMemberBenefitFields {
  internalName: string;
  title?: string | undefined;
  description?: string | undefined;
  logo: Asset;
}
export interface ICommonMemberBenefit
  extends Entry<ICommonMemberBenefitFields> {
  sys: Entry<ICommonMemberBenefitFields>["sys"] & {
    contentType: {
      sys: {
        id: "commonMemberBenefit";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ISocialMediaPresenceFields {
  internalName: string;
  facebookPage?: string | undefined;
  instagramPage?: string | undefined;
  twitterPage?: string | undefined;
}
export interface ISocialMediaPresence
  extends Entry<ISocialMediaPresenceFields> {
  sys: Entry<ISocialMediaPresenceFields>["sys"] & {
    contentType: {
      sys: {
        id: "socialMediaPresence";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IStateFields {
  stateName:
    | "Alaska"
    | "Alabama"
    | "Wyoming"
    | "West Virginia"
    | "Wisconsin"
    | "Washington"
    | "Vermont"
    | "Virgin Islands"
    | "Virginia"
    | "Utah"
    | "Texas"
    | "Tennessee"
    | "South Dakota"
    | "South Carolina"
    | "Rhode Island"
    | "Puerto Rico"
    | "Pennsylvania"
    | "Oregon"
    | "Oklahoma"
    | "Ohio"
    | "New York"
    | "Nevada"
    | "New Mexico"
    | "New Jersey"
    | "New Hampshire"
    | "Nebraska"
    | "North Dakota"
    | "North Carolina"
    | "Montana"
    | "Mississippi"
    | "Missouri"
    | "Minnesota"
    | "Michigan"
    | "Maine"
    | "Maryland"
    | "Massachusetts"
    | "Louisiana"
    | "Kentucky"
    | "Kansas"
    | "Indiana"
    | "Illinois"
    | "Idaho"
    | "Iowa"
    | "Hawaii"
    | "Guam"
    | "Georgia"
    | "Florida"
    | "Delaware"
    | "District of Columbia"
    | "Connecticut"
    | "Colorado"
    | "California"
    | "Arizona"
    | "American Samoa"
    | "Arkansas";
  stateCode:
    | "AK"
    | "WY"
    | "WV"
    | "WI"
    | "WA"
    | "VT"
    | "VI"
    | "VA"
    | "UT"
    | "TX"
    | "TN"
    | "SD"
    | "SC"
    | "RI"
    | "PR"
    | "PA"
    | "OR"
    | "OK"
    | "OH"
    | "NY"
    | "NV"
    | "NM"
    | "NJ"
    | "NH"
    | "NE"
    | "ND"
    | "NC"
    | "MT"
    | "MS"
    | "MO"
    | "MN"
    | "MI"
    | "ME"
    | "MD"
    | "MA"
    | "LA"
    | "KY"
    | "KS"
    | "IN"
    | "IL"
    | "ID"
    | "IA"
    | "HI"
    | "GU"
    | "GA"
    | "FL"
    | "DE"
    | "DC"
    | "CT"
    | "CO"
    | "CA"
    | "AZ"
    | "AS"
    | "AR"
    | "AL";
  stateIcon: Asset;
}
export interface IState extends Entry<IStateFields> {
  sys: Entry<IStateFields>["sys"] & {
    contentType: {
      sys: {
        id: "state";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

/** It can be reused for all pages */
export interface ISeoMetadataFields {
  name: string;
  seoTitle?: string | undefined;
  description?: string | undefined;
  keywords?: string[] | undefined;
  noIndex: boolean;
  noFollow: boolean;
  canonicalUrl?: string | undefined;
  organizationSchemaMarkupCode: Record<string, unknown>;
  onPageSchemaMarkupCode?: Record<string, unknown> | undefined;
  ogType?: string | undefined;
  ogSiteName?: string | undefined;
  ogImage?: Asset | undefined;
  ogArticlePublisher?: string | undefined;
  ogArticleModifiedTime?: string | undefined;
}
export interface ISeoMetadata extends Entry<ISeoMetadataFields> {
  sys: Entry<ISeoMetadataFields>["sys"] & {
    contentType: {
      sys: {
        id: "seoMetadata";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}
